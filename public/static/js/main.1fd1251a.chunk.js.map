{"version":3,"sources":["images/logo.svg","components/Header.js","components/Footer.js","contexts/currentUserContext.js","components/Card.js","components/Main.js","components/PopupWithForm.js","components/ImagePopup.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","utils/api.js","utils/utils.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","React","memo","className","href","title","src","logoPath","alt","currentYear","Date","getFullYear","Footer","CurrentUserContext","createContext","Card","props","currentUser","useContext","isOwn","_id","card","owner","isLiked","likes","some","like","link","name","onClick","onCardClick","onCardLike","length","onCardDelete","Main","this","onEditAvatar","context","avatar","about","onEditProfile","onAddPlace","aria-label","cards","map","item","key","PureComponent","contextType","PopupWithForm","isOpen","onClose","onSubmit","noValidate","children","type","isSubmitDisabled","buttonText","ImagePopup","validators","required","value","minLength","EditProfilePopup","useState","formValues","changeFormValues","errors","setErroros","handleFormChange","event","target","useEffect","userNameValidationResult","Object","keys","errorKey","errorResult","reduce","acc","element","aboutValidationResult","isNameInvalid","values","Boolean","isSubmitButtonDisabled","preventDefault","onUpdateUser","onChange","defaultValue","id","maxLength","EditAvatarPopup","avatarRef","useRef","current","onUpdateAvatar","placeholder","AddPlacePopup","nameIsValid","linkIsValid","formValidity","setFormValidity","isNameValid","isLinkValid","oldState","api","token","cohort","_token","_cohort","serverResponse","ok","json","Promise","reject","status","fetch","method","headers","authorization","then","_processResponse","userObject","body","JSON","stringify","cardObject","cardId","needLike","requestMethod","avatarData","App","handleEditAvatarClick","setState","isEditAvatarPopupOpen","handleEditProfileClick","isEditProfilePopupOpen","handleAddPlaceClick","isAddPlacePopupOpen","handleCardClick","selectedCard","closeAllPopups","confirmDeletePopupOpen","handleUpdateUser","newUserData","saveUserInfo","responceData","catch","error","console","log","handleUpdateAvatar","newAvatarData","changeAvatar","handleCardLike","changeCardLike","updatedCard","newCardsState","state","handleCardDelete","cardToDelete","cardDelete","deleteCard","responce","reducedCards","filter","handleAddPlaceSubmit","newCardObject","addCard","getUserInfo","data","getCardsList","Provider","Component","window","location","hostname","match","ReactDOM","render","StrictMode","document","querySelector","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1fd1251a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.13057e3e.svg\";","import React from 'react';\nimport logoPath from \"../images/logo.svg\";\n\nconst Header = React.memo(() => {\n  return (\n    <header className=\"header\">\n      <a href=\"/\" title=\"Место\" className=\"logo\">\n        <img src={logoPath} alt=\"Место\" className=\"logo__image\"/>\n      </a>\n    </header>\n  )\n})\n\nexport default Header;\n","import React from 'react';\n\nconst currentYear = new Date().getFullYear();\n\nconst Footer = React.memo(() => {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\">\n        &copy; {currentYear === 2020 ? '2020' : '2020 - ' + currentYear} Mesto Russia\n      </p>\n    </footer>\n  )\n});\n\nexport default Footer;\n","import React from \"react\";\n\nexport const CurrentUserContext = React.createContext();\n","import React from 'react';\nimport {CurrentUserContext} from '../contexts/currentUserContext';\n\nconst Card = React.memo((props) => {\n  const currentUser = React.useContext(CurrentUserContext);\n  const isOwn = currentUser._id === props.card.owner._id;\n  const isLiked = props.card.likes.some(like => like._id === currentUser._id); //Проверяем, установлен ли лайк\n  const cardLikeButtonClassName = 'place__like_status_active'; //Класс установленного лайка\n\n  function handleClick () {\n    props.onCardClick(props.card);\n  }\n\n  function handleLike () {\n    props.onCardLike(props.card);\n  }\n\n  function handleDelete () {\n    props.onCardDelete(props.card);\n  }\n\n  return (\n    <li className=\"place\">\n      <img src={props.card.link} alt={props.card.name} onClick={handleClick} className=\"place__image\"/>\n      <h2 className=\"place__title\">{props.card.name}</h2>\n\n      <div className=\"place__like-container\">\n        <button className={!isLiked? \"place__like\" : `place__like ${cardLikeButtonClassName}`} title=\"Поставить месту лайк\" onClick={handleLike}>Поставить месту лайк</button>\n        <p className=\"place__likes-count\" title={`Лайков - ${props.card.likes.length}`}>{props.card.likes.length}</p>\n      </div>\n\n      {isOwn && <button className=\"place__delete\" title=\"Удалить место\" onClick={handleDelete}>Удалить место</button> }\n    </li>\n  )\n})\n\nexport default Card\n","import React from 'react';\nimport Card from './Card';\nimport { CurrentUserContext } from '../contexts/currentUserContext'; //Контекст текущего юзера\n\nclass Main extends React.PureComponent {\n  static contextType = CurrentUserContext;\n\n  constructor(props) {\n    super(props);\n  }\n\n  render () {\n    return (\n      <main className=\"main\">\n        {/* Профиль пользователя */}\n        <section className=\"profile\">\n          <div className=\"profile__avatar-container\" onClick={this.props.onEditAvatar}>\n            <img src={this.context.avatar} alt=\"Жак-Ив Кусто\" className=\"profile__avatar\" />\n          </div>\n\n          <div className=\"profile__info\">\n            <h1 className=\"profile__title\">{this.context.name}</h1>\n            <p className=\"profile__description\">{this.context.about}</p>\n            <button className=\"profile__edit-button\" title=\"Редактировать профиль\" onClick={this.props.onEditProfile}>Редактировать профиль</button>\n          </div>\n\n          <button className=\"profile__add-button\" title=\"Добавить место\" onClick={this.props.onAddPlace}>Добавить место</button>\n        </section>\n        {/* Профиль пользователя */}\n\n        {/* Список мест  */}\n        <section className=\"places\" aria-label=\"Места\">\n          {/*  Контейнер для рендера списка мест  */}\n          <ul className=\"places__list\">\n            {this.props.cards.map((item, key) => (\n              <Card card={item} key={key} onCardClick={this.props.onCardClick} onCardLike={this.props.onCardLike} onCardDelete={this.props.onCardDelete}/>\n            ))}\n          </ul>\n          {/* // Контейнер для рендера списка мест   */}\n        </section>\n        {/* Список мест  */}\n      </main>\n    )\n  }\n}\n\nexport default Main;\n","import React from 'react';\n\nconst PopupWithForm = React.memo((props) => {\n    return (\n      <div className={`popup popup_type_${props.name} ${props.isOpen && 'popup_opened'}`}>\n        <div className=\"popup__container\">\n          <button className=\"popup__close\" onClick={props.onClose}>Закрыть форму</button>\n          <form className=\"form\" name={props.name} onSubmit={props.onSubmit} noValidate>\n            <h2 className=\"form__title\">{props.title}</h2>\n            {props.children}\n            <button type=\"submit\" className={`form__submit ${props.isSubmitDisabled && 'form__submit_inactive'}`}>{props.buttonText}</button>\n          </form>\n        </div>\n      </div>\n    )\n});\n\nexport default PopupWithForm;\n","import React from 'react';\n\nconst ImagePopup = React.memo ((props) => {\n  return (\n      <div className={`popup popup_type_image ${props.card && 'popup_opened'}`}>\n        <figure className=\"popup__image-container\">\n          <button className=\"popup__close\" onClick={props.onClose}>Закрыть форму</button>\n          {/*Поскольку мы не имеем изображения при инициализации, не рендерим эту картинку, если карточка не выбрана*/}\n          {props.card && <img className=\"popup__image\" src={props.card.link} alt={props.card.name}/>}\n          <figcaption className=\"popup__image-description\">\n            {props.card.name}\n          </figcaption>\n        </figure>\n      </div>\n  )\n});\n\nexport default ImagePopup;\n","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from '../contexts/currentUserContext';\n\nfunction validate () {\n  //true  - error\n  //false - correct\n}\n\nconst validators = {\n  name: {\n    required: (value) => {\n      return value === '';\n    },\n    minLength: (value) => {\n      return value && value.length < 3;\n    }\n  },\n  about: {\n    required: (value) => {\n      return value === '';\n    },\n    minLength: (value) => {\n      return value && value.length < 2;\n    }\n  }\n}\n\nfunction EditProfilePopup (props) {\n  const [formValues, changeFormValues] = React.useState({name: '', about: ''});\n\n  //Переменная для состояеия ошибок\n  const [errors, setErroros] = React.useState({\n    name: {\n      required: true,\n      minLength: true\n    },\n    about: {\n      required: true,\n      minLength: true\n    }\n  });\n\n  const currentUser = React.useContext(CurrentUserContext);\n\n  function handleFormChange (event) {\n    const {name, value} = event.target;\n    changeFormValues({...formValues, [name]: value});\n  }\n\n  function handleSubmit (event) {\n    event.preventDefault();\n    props.onUpdateUser(formValues);\n  }\n\n  React.useEffect(() => {\n    changeFormValues({name: currentUser.name, about: currentUser.about})\n  }, [currentUser])\n\n  React.useEffect(function validateInputs () {\n    const { name, about } = formValues;\n    const userNameValidationResult = Object.keys(validators.name).map(function (errorKey) {\n      const errorResult = validators.name[errorKey](name);\n      return {\n        [errorKey]: errorResult\n      }\n    }).reduce((acc, element) => {\n      return {...acc, ...element}\n    }, {});\n\n    const aboutValidationResult = Object.keys(validators.about).map(function (errorKey) {\n      const errorResult = validators.about[errorKey](about);\n      return {\n        [errorKey]: errorResult\n      }\n    }).reduce((acc, element) => {\n      return {...acc, ...element}\n    }, {});\n\n    setErroros({name: userNameValidationResult, about: aboutValidationResult});\n\n  }, [formValues, setErroros]);\n\n  const isNameInvalid = Object.values(errors.name).some(Boolean);\n  const isAboutInvalid = Object.values(errors.about).some(Boolean);\n  const isSubmitButtonDisabled = isAboutInvalid || isNameInvalid;\n\n  return (\n    <PopupWithForm title=\"Редактировать профиль\" buttonText=\"Сохранить\" name=\"profile\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit} isSubmitDisabled={isSubmitButtonDisabled} children={\n      <>\n        <div className=\"form__input-container\">\n          <input onChange={handleFormChange} defaultValue={formValues.name} type=\"text\" name=\"name\" className=\"form__input\" id=\"profile-name\" minLength=\"2\" maxLength=\"40\" aria-label=\"Имя\" required/>\n          {errors.name.required && <span className=\"form__error form__error_active\" id=\"profile-name-error\">Заполните это поле</span>}\n          {errors.name.minLength && <span className=\"form__error form__error_active\" id=\"profile-name-error\">Минимальная длина - 3 символа</span>}\n        </div>\n        <div className=\"form__input-container\">\n          <input onChange={handleFormChange} defaultValue={formValues.about} type=\"text\" name=\"about\" className=\"form__input\" id=\"profile-description\" minLength=\"2\" maxLength=\"40\" aria-label=\"Род деятельности\" required/>\n          {errors.about.required && <span className=\"form__error form__error_active\" id=\"profile-description-error\">Заполните это поле</span>}\n          {errors.about.minLength && <span className=\"form__error form__error_active\" id=\"profile-description-error\">Минимальная длина - 2 символа</span>}\n        </div>\n      </>\n    }/>\n  )\n}\n\nexport default EditProfilePopup;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/currentUserContext'\n\nconst EditAvatarPopup = React.memo((props) => {\n  const currentUser = React.useContext(CurrentUserContext);\n  const avatarRef = React.useRef(currentUser.avatar);\n\n  function handleAvatarChange (event) {\n    avatarRef.current = event.target.value;\n  }\n\n  function handleSubmit (event) {\n    event.preventDefault();\n    props.onUpdateAvatar({avatar: avatarRef.current});\n  }\n\n  React.useEffect(()=> {\n    avatarRef.current = currentUser.avatar;\n  }, [currentUser])\n\n  return (\n    <PopupWithForm title=\"Обновить аватар\" buttonText=\"Сохранить\" name=\"avatar\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit} children={\n      <>\n        <div className=\"form__input-container\">\n          <input onChange={handleAvatarChange} type=\"url\" name=\"avatar\" className=\"form__input form__input_value_avatar\" id=\"user-avatar\"  defaultValue={avatarRef.current} placeholder=\"Ссылка на аватар\" aria-label=\"Ссылка на аватар\" required/>\n          <span className=\"form__error\" id=\"user-avatar-error\"></span>\n        </div>\n      </>\n    }/>\n  )\n})\n\nexport default EditAvatarPopup;\n","import React, {useEffect} from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\n\nconst AddPlacePopup = React.memo((props) => {\n  const [formValues, changeFormValues] = React.useState({\n    name: '',\n    link: ''\n  });\n\n  function handleSubmit (event) {\n    event.preventDefault();\n    props.onAddPlace(formValues);\n    //Сбрасываем значения после сабмита\n    changeFormValues({name: '', link: ''});\n  }\n\n  //Для валидации нам нужно для каждого инпута вызвать валидацию и отрендерить ошибку в контейнер ошибки возле этого инпута\n  function handleFormChange (event)  {\n    const {name, value} = event.target;\n    changeFormValues({...formValues, [name]: value});\n  }\n\n  const [formValidity, setFormValidity] = React.useState({\n    nameIsValid: false,\n    linkIsValid: false\n  });\n\n  useEffect(() => {\n    const {name, link} = formValues;\n    // 1) Проверить значение инпута\n    const isNameFilled = name.length > 2;\n    const isNameValid = isNameFilled;\n\n    const isLinkFilled = link.length > 10;\n    const isLinkValid = isLinkFilled;\n\n    setFormValidity(oldState => ({\n      nameIsValid: isNameValid,\n      linkIsValid: isLinkValid,\n    }));\n\n  }, [formValues, setFormValidity])\n\n  const {nameIsValid, linkIsValid} = formValidity;\n  const isSubmitDisabled = !(nameIsValid && linkIsValid);\n\n  return (\n    <PopupWithForm title=\"Новое место\" buttonText=\"Создать\" name=\"place\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit} isSubmitDisabled={isSubmitDisabled} children={\n      <>\n        <div className=\"form__input-container\">\n          <input onChange={handleFormChange} value={formValues.name} type=\"text\" name=\"name\" className=\"form__input\" id=\"place-name\" minLength=\"1\" maxLength=\"30\" placeholder=\"Название\" aria-label=\"Название места\" required/>\n          {!nameIsValid && <span className=\"form__error form__error_active\" id=\"place-name-error\">Введите название места</span>}\n        </div>\n        <div className=\"form__input-container\">\n          <input onChange={handleFormChange} value={formValues.link} type=\"url\" name=\"link\" className=\"form__input\" id=\"place-image\"  placeholder=\"Ссылка на картинку\" aria-label=\"Ссылка на картинку\" required/>\n          {!linkIsValid && <span className=\"form__error form__error_active\" id=\"place-image-error\">Введите корректный url изображения</span>}\n        </div>\n      </>\n    }/>\n  )\n});\n\nexport default AddPlacePopup;\n","import {token, cohort} from './utils.js';\n\nclass Api {\n  //Конструктор принимает токен\n  constructor(token, cohort) {\n    this._token = token; //Токен\n    this._cohort = cohort; //Когорта\n  }\n\n  //Почему бы не вынести обработчик ответа сервера в приватный метод апи?\n  _processResponse (serverResponse) {\n    // console.log(serverResponse); Для нужд дебагинга\n\n    if (serverResponse.ok) {\n      return serverResponse.json(); //Если сервер ответил без ошибок, вернули данные в JSON\n    }\n\n    return Promise.reject(`Ошибка: ${serverResponse.status}`); //Иначе вернули ошибку, которая попадёт в catch\n  }\n\n  getUserInfo () {\n    return fetch(`https://mesto.nomoreparties.co/v1/${this._cohort}/users/me`, {\n      method: 'GET',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      }\n    }).then(this._processResponse);\n  }\n\n  saveUserInfo (userObject) {\n    return fetch(`https://mesto.nomoreparties.co/v1/${this._cohort}/users/me`, {\n          method: 'PATCH',\n          headers: {\n            authorization: this._token,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(userObject)\n        }).then(this._processResponse);\n  }\n\n  getCardsList () {\n    return fetch(`https://mesto.nomoreparties.co/v1/${this._cohort}/cards`, {\n      method: 'GET',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      }\n    }).then(this._processResponse);\n  }\n\n  addCard (cardObject) {\n    return fetch(`https://mesto.nomoreparties.co/v1/${this._cohort}/cards`, {\n      method: 'POST',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(cardObject)\n    }).then(this._processResponse);\n  }\n\n  deleteCard (cardId) {\n    return fetch(`https://mesto.nomoreparties.co/v1/${this._cohort}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      }\n    }).then(this._processResponse);\n  }\n\n  changeCardLike (cardId, needLike) {\n    let requestMethod = '';\n\n    if (needLike) {\n      requestMethod = 'PUT'; //Если вторым параметром пришло true, ставим лайк\n    } else {\n      requestMethod = 'DELETE'; //Если вторым параметром пришло false, снимаем лайк\n    }\n\n    return fetch(`https://mesto.nomoreparties.co/v1/${this._cohort}/cards/likes/${cardId}`, {\n      method: requestMethod,\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      }\n    }).then(this._processResponse);\n  }\n\n  // FIXME: DEPRECATED\n  // addLikeToCard (cardId) {\n  //   return fetch(`https://mesto.nomoreparties.co/v1/${this._cohort}/cards/likes/${cardId}`, {\n  //     method: 'PUT',\n  //     headers: {\n  //       authorization: this._token,\n  //       'Content-Type': 'application/json'\n  //     }\n  //   }).then(this._processResponse);\n  // }\n  //\n  // removeLikeFromCard (cardId) {\n  //   return fetch(`https://mesto.nomoreparties.co/v1/${this._cohort}/cards/likes/${cardId}`, {\n  //     method: 'DELETE',\n  //     headers: {\n  //       authorization: this._token,\n  //       'Content-Type': 'application/json'\n  //     }\n  //   }).then(this._processResponse);\n  // }\n\n  changeAvatar (avatarData) {\n    return fetch(`https://mesto.nomoreparties.co/v1/${this._cohort}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(avatarData)\n    }).then(this._processResponse);\n  }\n}\n\nconst api = new Api(token, cohort);\nexport default api;\n\n//Коментарий для проверки разрешения конфликта с гитхабом\n","export const token = '22048b95-8eb6-4af2-b310-632c9550d5c5' //Токен\nexport const cohort = 'cohort-14'//  Идентификатор группы\n","import React from 'react';\nimport Header from './Header'\nimport Footer from './Footer';\nimport Main from './Main'\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport api from '../utils/api.js'; //Подключение к апи\nimport { CurrentUserContext } from '../contexts/currentUserContext'; //Контекст текущего юзера\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isEditAvatarPopupOpen: false,\n      isEditProfilePopupOpen: false,\n      isAddPlacePopupOpen: false,\n      confirmDeletePopupOpen: false,\n      selectedCard: '',\n      currentUser: '',\n      cards: []\n    }\n  }\n\n  handleEditAvatarClick = () => {\n    this.setState({isEditAvatarPopupOpen: true});\n  }\n\n  handleEditProfileClick = () => {\n    this.setState({isEditProfilePopupOpen: true});\n  }\n\n  handleAddPlaceClick = () => {\n    this.setState({isAddPlacePopupOpen: true});\n  }\n\n  handleCardClick = (card) => {\n    this.setState({selectedCard: card});\n  }\n\n  closeAllPopups = () => {\n    this.setState( {\n      isEditAvatarPopupOpen: false,\n      isEditProfilePopupOpen: false,\n      isAddPlacePopupOpen: false,\n      confirmDeletePopupOpen: false,\n      selectedCard: ''\n    });\n  }\n\n  handleUpdateUser = (newUserData) => {\n    api.saveUserInfo(newUserData).then(responceData => {\n      this.setState({currentUser: responceData});\n      this.closeAllPopups();\n    }).catch(error => console.log(error))\n  }\n\n  handleUpdateAvatar = (newAvatarData) => {\n    //Обновить аватар\n    api.changeAvatar(newAvatarData).then(responceData => {\n      //Обновить контекст\n      this.setState({currentUser: responceData});\n      this.closeAllPopups();\n    }).catch(error => console.log(error))\n  }\n\n  handleCardLike = (card) => {\n    //Проверяем, лайкнута ли карточка\n    const isLiked = card.likes.some(like => like._id === this.context._id);\n\n    // Давать готовые куски кода в проектной работе - такое себе, напишу эту часть сам\n    // Если карта \"лайкнута\", передаем в апи \"не нужен лайк\" чтобы снять лайк при клике\n    // Метод вернёт карточку места с обновленным числом лайков (объект, элемент массива)\n    api.changeCardLike(card._id, !isLiked).then(updatedCard => {\n      //Обновить число лайков на карточках (внести изменение в стейт списка карточек)\n      const newCardsState = this.state.cards.map(item => {\n        //Находим в массиве карточку с нужным   ._id\n        if (item._id === updatedCard._id) {\n          return updatedCard; //Возвращаем вместо неё новую карточку, полученную в ответе апи\n        } else {\n          return item;\n        }\n      })\n\n      this.setState({cards: newCardsState}); //Обновили состояние карточек\n    }).then().catch(error => console.log(error));\n  }\n\n  handleCardDelete = (card) => {\n    //Нам надо удалять карточку только после подтверждения\n    //0) Создать переменную с карточкой, которую мы будем удалять\n    this.cardToDelete  = card;\n    //1) Открыть попап подтверждения удаления передав в него пропсом\n    this.setState({confirmDeletePopupOpen: true});\n    //2) Если юзер подтвердил удаление, удалить карточку\n    //2) Если юзер не подтвердил удаление, ничего не делать\n  }\n\n  cardDelete = (event) => {\n    event.preventDefault();\n    //Передаём переменную в компоненте при помощи переменной класса\n    let card = this.cardToDelete;\n    api.deleteCard(card._id).then(responce => {\n        //После удаления в апи надо удалить карточку из списка карточек\n        const reducedCards = this.state.cards.filter(item => item._id !== card._id);//В массиве оставляем только карточки, у которых id не совпадают с удаляемой карточкой\n        this.setState({cards: reducedCards});\n        this.cardToDelete.current = {};\n      }).catch(error => {\n      console.log(error);\n    })\n    //Закрыть все попапы\n    this.closeAllPopups();\n  }\n\n  handleAddPlaceSubmit = (newCardObject) => {\n    api.addCard(newCardObject).then(responceData => {\n      this.setState({cards: [responceData, ...this.state.cards] });\n      this.closeAllPopups();\n    }).catch(error => console.log(error));\n  }\n\n  componentDidMount() {\n    api.getUserInfo().then(data => {\n      this.setState({\n        currentUser: data\n      });\n    }).catch(error => console.log(error));\n\n    api.getCardsList().then(data => {\n      this.setState({\n        cards: data\n      });\n    }).catch(error => console.log(error));\n  }\n\n  render() {\n    return (\n      <CurrentUserContext.Provider value={this.state.currentUser}>\n        <Header/>\n        <Main onEditProfile={this.handleEditProfileClick} onAddPlace={this.handleAddPlaceClick} onEditAvatar={this.handleEditAvatarClick} onCardClick={this.handleCardClick} cards={this.state.cards} onCardLike={this.handleCardLike} onCardDelete={this.handleCardDelete}/>\n        <Footer/>\n\n        <EditProfilePopup isOpen={this.state.isEditProfilePopupOpen} onClose={this.closeAllPopups} onUpdateUser={this.handleUpdateUser} />\n        <AddPlacePopup isOpen={this.state.isAddPlacePopupOpen} onClose={this.closeAllPopups} onAddPlace={this.handleAddPlaceSubmit} />\n        <PopupWithForm title=\"Вы уверены?\" buttonText=\"Да\" name=\"confirm\" isOpen={this.state.confirmDeletePopupOpen} onSubmit={this.cardDelete} />\n        <EditAvatarPopup onClose={this.closeAllPopups} isOpen={this.state.isEditAvatarPopupOpen} onUpdateAvatar={this.handleUpdateAvatar} />\n        <ImagePopup onClose={this.closeAllPopups} card={this.state.selectedCard}/>\n      </CurrentUserContext.Provider>\n    );\n  }\n\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('.root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}